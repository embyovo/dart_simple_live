name: app-build-action (Android & Windows)

# Ëß¶ÂèëÊù°‰ª∂ÔºöÊâãÂä®Ëß¶ÂèëÊàñÊé®ÈÄÅTagÊó∂
on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

jobs:
  # ÊûÑÂª∫AndroidÁâàÊú¨
  build-android:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: master

      - name: Download Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: keystore.jks
          encodedString: ${{ secrets.KEYSTORE_BASE64 }}

      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > simple_live_app/android/key.properties
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> simple_live_app/android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> simple_live_app/android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> simple_live_app/android/key.properties

      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: "17"
          cache: 'gradle'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.22.x"
          cache: true

      - name: Restore packages and clean cache
        run: |
          cd simple_live_app
          flutter pub get
          flutter clean
          dart pub global activate flutter_distributor

      - name: Build APK
        run: |
          cd simple_live_app
          flutter build apk --release --split-per-abi

      - name: Upload APK to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android
          path: |
            simple_live_app/build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk
            simple_live_app/build/app/outputs/flutter-apk/app-arm64-v8a-release.apk
            simple_live_app/build/app/outputs/flutter-apk/app-x86_64-release.apk

      - name: Read version
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: assets/app_version.json

      - name: Upload to Release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ fromJson(steps.version.outputs.content).version }}
          body: ${{ fromJson(steps.version.outputs.content).version_desc }}
          prerelease: ${{ fromJson(steps.version.outputs.content).prerelease }}
          token: ${{ secrets.TOKEN }}
          files: |
            simple_live_app/build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk
            simple_live_app/build/app/outputs/flutter-apk/app-arm64-v8a-release.apk
            simple_live_app/build/app/outputs/flutter-apk/app-x86_64-release.apk

      - run: echo "üì± Android build status: ${{ job.status }}"

  # ÊûÑÂª∫WindowsÁâàÊú¨
  build-windows:
    runs-on: windows-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: master

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.22.x"
          cache: true

      - name: Enable Flutter Desktop
        run: flutter config --enable-windows-desktop

      - name: Restore packages and clean cache
        run: |
          cd simple_live_app
          flutter pub get
          flutter clean
          dart pub global activate flutter_distributor

      - name: Build Windows
        run: |
          cd simple_live_app
          flutter_distributor package --platform windows --targets msix,zip --skip-clean

      - name: Upload Windows to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: |
            simple_live_app/build/dist/*/*.msix
            simple_live_app/build/dist/*/*.zip

      - name: Read version
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: assets/app_version.json

      - name: Upload to Release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ fromJson(steps.version.outputs.content).version }}
          body: ${{ fromJson(steps.version.outputs.content).version_desc }}
          prerelease: ${{ fromJson(steps.version.outputs.content).prerelease }}
          token: ${{ secrets.TOKEN }}
          files: |
            simple_live_app/build/dist/*/*.msix
            simple_live_app/build/dist/*/*.zip

      - run: echo "üñ•Ô∏è Windows build status: ${{ job.status }}"
    
